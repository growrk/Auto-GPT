{
  "build": {
    "dockerfile": "./Dockerfile",
    "context": "."
  },
  "features": {
    "ghcr.io/devcontainers/features/common-utils:2": {
      "installZsh": "true",
      "username": "vscode",
      "userUid": "1000",
      "userGid": "1000",
      "upgradePackages": "true"
    },
    "ghcr.io/devcontainers/features/python:1": {}
  },
  // Configure tool-specific properties.
  "customizations": {
    // Configure properties specific to VS Code.
    "vscode": {
      // Set *default* container specific settings.json values on container create.
      "settings": {
        "python.defaultInterpreterPath": "/usr/local/bin/python",
        "workbench.iconTheme": "vscode-icons",
        "editor.inlineSuggest.enabled": true,
        "workbench.colorTheme": "GitHub Dark Colorblind (Beta)",
        "editor.codeActionsOnSave": {
          "source.fixAll": true
        },
        "editor.defaultFormatter": "dbaeumer.vscode-eslint",
        "editor.formatOnSave": true,
        "editor.tabSize": 2,
        "editor.renderWhitespace": "all",
        "window.zoomLevel": 1,
        "[python]": {
          "editor.formatOnType": true
        },
        "git.autofetch": true,
        "editor.lineNumbers": "interval",
        "workbench.sideBar.location": "right",
        "explorer.autoReveal": false,
        "workbench.action.toggleSidebarVisibility": "ctrl+b"
      },
      "extensions": [
        "streetsidesoftware.code-spell-checker",
        "dbaeumer.vscode-eslint",
        "eamodio.gitlens"
      ]
    },
    "codespaces": {
      "openFiles": [
        "README.md",
        "docs/grk.md"
      ]
    }
  },
  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  // "forwardPorts": [],

  // Use 'postCreateCommand' to run commands after the container is created.
  // "postCreateCommand": "pip3 install --user -r requirements.txt",

  // Set `remoteUser` to `root` to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
  "remoteUser": "vscode",

  // Environment variables to set.
  "containerEnv": {
    "CUSTOM_SEARCH_ENGINE_ID": "${localEnv:CUSTOM_SEARCH_ENGINE_ID}",
    "GOOGLE_API_KEY": "${localEnv:GOOGLE_API_KEY}",
    "OPENAI_API_KEY": "${localEnv:OPENAI_API_KEY}"
  },

  // Use 'postCreateCommand' to run commands after the container is created.
  "postCreateCommand": "./scripts/codespacesSetup.sh"
}
